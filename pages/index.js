import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.scss'
import { getArticles } from './api/articlesService'
import ArticleItem from '../components/ArticleItem'
import { useEffect, useState, useContext } from 'react'
import {Grid , Paper} from '@mui/material';
import BottomTabNavigator from '../components/BottomTabNavigator'
export default function Home({articles}) {

const [articleList, setArticleList] = useState()


useEffect(()=>{

 setArticleList(articles.filter( article=> article.subtype=="7"))

},[])

return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


   
      <main className={styles.main}>
      <div className='header'></div>
      
      
      <Grid container direction="row" className = {styles.mainSection}>
      
      <Grid item md={12} lg={9}   className={styles.articleList}>
      <Grid container spacing={1} wrap="wrap" direction="row">
      {
      articleList?.map( article =>{
      return( 
              <Grid item  lg={4} md={6} sm={12}>
              <ArticleItem key={article._id} articleData={article} />
              </Grid>
           )})  
      }
      </Grid>
      
      </Grid>
      <Grid md={0} lg={3} className ={styles.sideBar}></Grid>
      
      </Grid>
      <Paper   sx={{  position: 'fixed' , display:{ md: 'block' , lg:'none'}, bottom: 0, left: 0, right: 0 }} elevation={3}>
        <BottomTabNavigator sx={{}}/>
      </Paper>
      </main>
    </div>
  )
}



export async function getServerSideProps(){
const articles = await getArticles()


articles.forEach(article => {
  let orderedTags = normalizeTag(article.taxonomy.tags)
  let normalizeDate = parseDate(new Date(article.display_date))
  article.display_date=normalizeDate;
  article.taxonomy.tags = orderedTags

 
});


function normalizeTag(tagsArray){

 for (let i = 0; i < tagsArray.length; i++) {
   
   for (let j = 0; j < tagsArray.length; j++) {
    if(tagsArray[j+1] && (tagsArray[j].text > tagsArray[j + 1].text)){
      
      let aux = tagsArray[j];
      tagsArray[j] = tagsArray[j + 1];
      tagsArray[j + 1] = aux;
    }
   
    }
  
  }
  
  if(tagsArray.length > 10){
    return tagsArray.slice(0,10);
    
    
  }else{
    return tagsArray;
  }

}


function parseDate(date){
  let monthList = ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"]
  let fullDate =  `${date.getDate()} de ${monthList[date.getMonth()]} de ${date.getFullYear()}`
  
  return fullDate

}


return({props:{
  articles,
}})
}
